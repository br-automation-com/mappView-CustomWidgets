<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.br-automation.com/iat2015/contentDefinition/v2" xmlns:iat="http://www.br-automation.com/iat2015/contentDefinition/v2" xmlns:types="http://www.br-automation.com/iat2015/widgetTypes/v2" elementFormDefault="qualified">
<xs:complexType name="widgets.brXtended.GroupBoxRestrict" abstract="true">
	<xs:complexContent>
		<xs:restriction base="iat:brease.core.BaseContentWidget">
			<xs:attribute name="tabIndex" use="optional" type="types:Integer" default="-1" />
			<xs:attribute name="height" use="optional" type="types:Size" default="150" />
			<xs:attribute name="width" use="optional" type="types:Size" default="200" />
		</xs:restriction>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="widgets.brXtended.GroupBox">
	<xs:complexContent>
		<xs:extension base="iat:widgets.brXtended.GroupBoxRestrict">
			<xs:all>
				<xs:element name="Widgets" type="iat:Widgets" minOccurs="1" maxOccurs="1">
					<xs:unique name="widgets.brXtended.GroupBox.zIndex">
						<xs:selector xpath="./iat:Widget"/>
						<xs:field xpath="@zIndex"/>
					</xs:unique>
				</xs:element>
			</xs:all>
			<xs:attribute name="alignment" use="optional" type="types:brease.enum.Direction" default="vertical" />
			<xs:attribute name="childPositioning" use="optional" type="types:brease.enum.ChildPositioning" default="absolute" />
			<xs:attribute name="ellipsis" use="optional" type="types:Boolean" default="false" />
			<xs:attribute name="float" use="optional" type="types:brease.enum.Floating" default="left" />
			<xs:attribute name="image" use="optional" type="types:ImagePath" default="" />
			<xs:attribute name="imageAlign" use="optional" type="types:brease.enum.ImagePosition" default="left" />
			<xs:attribute name="maxHeight" use="optional" type="types:Integer" default="0" />
			<xs:attribute name="text" use="optional" type="types:String" default="" />
			<xs:attribute name="useSVGStyling" use="optional" type="types:Boolean" default="true" />
			<xs:attribute name="imageHeight" use="optional" type="types:ImageSize" default="0" />
			<xs:attribute name="imageWidth" use="optional" type="types:ImageSize" default="0" />
			<xs:attribute name="borderWidth" use="optional" type="types:PixelValCollection" default="1px" />
			<xs:attribute name="cornerRadius" use="optional" type="types:PixelValCollection" default="0px" />
			<xs:attribute name="backColor" use="optional" type="types:Color" default="transparent" />
			<xs:attribute name="headerBackColor" use="optional" type="types:Color" default="transparent" />
			<xs:attribute name="headerGradient" use="optional" type="types:Gradient" default="" />
			<xs:attribute name="contentGradient" use="optional" type="types:Gradient" default="" />
			<xs:attribute name="borderColor" use="optional" type="types:ColorCollection" default="#DFDFDF" />
			<xs:attribute name="borderStyle" use="optional" type="types:BorderStyle" default="solid" />
			<xs:attribute name="textColor" use="optional" type="types:Color" default="#000000" />
			<xs:attribute name="imageColor" use="optional" type="types:Color" default="#000000" />
			<xs:attribute name="fontName" use="optional" type="types:FontName" default="Arial" />
			<xs:attribute name="fontSize" use="optional" type="types:PixelVal" default="12px" />
			<xs:attribute name="bold" use="optional" type="types:Boolean" default="true" />
			<xs:attribute name="italic" use="optional" type="types:Boolean" default="false" />
			<xs:attribute name="textAlign" use="optional" type="types:brease.enum.TextAlign" default="center" />
			<xs:attribute name="opacity" use="optional" type="types:Opacity" default="1" />
			<xs:attribute name="shadow" use="optional" type="types:Shadow" default="none" />
			<xs:attribute name="padding" use="optional" type="types:Padding" default="0px" />
			<xs:attribute name="margin" use="optional" type="types:Margin" default="0px 0px 12px 0px" />
			<xs:attribute name="verticalAnchorTop" use="optional" type="types:Boolean" default="true" />
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
</xs:schema>
